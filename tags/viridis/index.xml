<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Viridis on Ítalo Cegatta</title>
    <link>/tags/viridis/</link>
    <description>Recent content in Viridis on Ítalo Cegatta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Sat, 08 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/viridis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gráficos com dimensão espacial e temporal</title>
      <link>/graficos-com-dimensao-espacial-e-temporal/</link>
      <pubDate>Sat, 08 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/graficos-com-dimensao-espacial-e-temporal/</guid>
      <description>O post de hoje é sobre visualização de dados com dimensão espacial e temporal. Basicamente são gráficos que têm uma representação geográfica associada a informações que variam no tempo. Este tipo de análise é comum no meu dia a dia e por isso resolvi deixar 3 alternativas resgistradas aqui. O contexto que iremos abordar está relacionado ao banco de dados de focos de incêndios registrados pelo INPE no Programa Queimadas Monitoramento por Satélites.</description>
    </item>
    
    <item>
      <title>Web scraping: dados de páginas da internet na palma da sua mão</title>
      <link>/web-scraping-dados-de-paginas-da-internet-na-palma-da-sua-mao/</link>
      <pubDate>Fri, 16 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/web-scraping-dados-de-paginas-da-internet-na-palma-da-sua-mao/</guid>
      <description>Você já precisou copiar na mão uma informação de texto, valor ou tabela de uma pagina web? Pelo menos no meu trabalho isto é muito comum. Por mais que os dados estejam lá site, eles nunca estão disponíveis todos juntos e no formato que queremos, parece que sacanagem. Diante disto, o objetivo deste post é mostrar como podemos utilizar o R para coletar dados de uma página web e esquecer o famooooso ctrl+c/ctrl+v.</description>
    </item>
    
    <item>
      <title>Os gráficos que explicam nossos dados (heatmap)</title>
      <link>/os-graficos-que-explicam-nossos-dados-heatmap/</link>
      <pubDate>Sat, 09 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>/os-graficos-que-explicam-nossos-dados-heatmap/</guid>
<<<<<<< Updated upstream
      <description>O heatmap é um gráfico muito útil para identificar padrões, principalmente quando temos muitas variáveis no gráfico. Essencialmente o heatmap necessita de 3 variáveis: uma variável resposta e duas outras variáveis para compor os eixos x e y. Não há restrição quanto ao tipo de variável, qualquer uma delas podem ser quantitativa ou qualitativa. Talvez esse seja o trunfo do heatmap, essa flexbilidade quanto a natureza das variáveis nos permite utilizá-lo em diversos momentos e substituir gráficos mais tradicionais quando eles não dão conta do recado.</description>
=======
<<<<<<< HEAD
      <description>&lt;p&gt;O heatmap é um gráfico muito útil para identificar padrões, principalmente quando temos muitas variáveis no gráfico. Essencialmente o heatmap necessita de 3 variáveis: uma variável resposta e duas outras variáveis para compor os eixos x e y. Não há restrição quanto ao tipo de variável, qualquer uma delas podem ser quantitativa ou qualitativa. Talvez esse seja o trunfo do heatmap, essa flexbilidade quanto a natureza das variáveis nos permite utilizá-lo em diversos momentos e substituir gráficos mais tradicionais quando eles não dão conta do recado.&lt;/p&gt;
&lt;p&gt;Vamos trabalhar com os dados do &lt;a href=&#34;http://www.projetotume.com/&#34;&gt;Projeto TUME&lt;/a&gt;, especificamente com o TUME 0, plantado na Estação Experimental de Itatinga. O TUME é um projeto muito interessante e possui informações importantes sobre plantios de &lt;em&gt;Eucalyptus&lt;/em&gt; no Brasil, vale a pena visitar o site e aproveitar o conteúdo disponível.&lt;/p&gt;
&lt;p&gt;Vamos primeiro carregar os dados e fazer algumas alterações. Para auxiliar na ordem dos fatores no gráfico vamos adicionar um atributo na coluna &lt;code&gt;Esp&lt;/code&gt; informando a ordem crescente das espécies em função da altura dominante. Em seguida, apenas por conveniência, converti a idade dos inventários de meses para anos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)
pacman::p_load(readr, dplyr, ggplot2, ggthemes, viridis)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dados &amp;lt;- read_csv2(
  &amp;quot;https://github.com/italocegatta/italocegatta.github.io_source/raw/master/content/dados/tume0.csv&amp;quot;
)

# Cria um fator com o atributo para a variável Esp que informa a ordem crescente
# das espécies em função da altura dominante.
dados &amp;lt;- dados %&amp;gt;% 
  mutate(
    Esp = reorder(Esp, Hdom, function(x) max(x)),
    Idade = round(I_meses/12,1)
  )
dados&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 138 x 16
##    N_tume             Esp I_meses Parc_m2 DAPmed DAPsd  Hmed   Hsd  Hdom
##     &amp;lt;int&amp;gt;          &amp;lt;fctr&amp;gt;   &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1      0         Clone_1      52  1425.6   11.4   1.4  16.5   1.3  17.8
##  2      0         Clone_2      52  1425.6   10.2   1.4  15.9   1.4  16.6
##  3      0         Clone_3      52  1425.6   10.7   1.6  15.0   1.3  16.1
##  4      0     E_benthamii      52  1425.6    9.0   2.7   9.8   2.3  13.0
##  5      0    E_botryoides      52  1425.6    9.1   4.3  10.8   3.4  15.3
##  6      0 E_camaldulensis      52  1425.6    8.3   2.9   8.3   2.3  11.8
##  7      0    E_citriodora      52  1425.6    8.0   3.5   8.3   2.8  12.0
##  8      0     E_cloeziana      52   928.8    7.5   2.5   7.0   2.0   9.6
##  9      0        E_deanei      52  1425.6   10.6   2.9  11.3   1.8  13.4
## 10      0        E_dunnii      52  1425.6    6.7   3.7   6.1   2.4  10.3
## # ... with 128 more rows, and 7 more variables: N_fuste &amp;lt;int&amp;gt;, Sobr &amp;lt;dbl&amp;gt;,
## #   G &amp;lt;dbl&amp;gt;, V &amp;lt;int&amp;gt;, IMA &amp;lt;dbl&amp;gt;, B &amp;lt;int&amp;gt;, Idade &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Se fizermos a seguinte pergunta: qual gráfico podemos utilizar para mostrar o crescimento da altura dominantes dos materiais? Penso que a resposta rápida seria, um gráfico de linhas! Ok, vamos tentar, veja a Figura &lt;a href=&#34;#fig:6-linhas&#34;&gt;1&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(dados, aes(Idade, Hdom, color = Esp)) +
  geom_line(size=1.5) +
  labs(x = &amp;quot;Idade (anos)&amp;quot;, y = &amp;quot;Altura dominante (m)&amp;quot;) +
  theme_few() +
  scale_color_viridis(
    name = &amp;quot;Materiais genéticos&amp;quot;,
    direction = -1, discrete = T
  ) +
  guides(col = guide_legend(ncol = 1, reverse = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:6-linhas&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2016-07-09-os-graficos-que-explicam-nossos-dados-heatmap_files/figure-html/6-linhas-1.png&#34; alt=&#34;Aumento da altura dominante utilizando gráficos de linhas.&#34; width=&#34;4000&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figura  1: Aumento da altura dominante utilizando gráficos de linhas.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Muito bem, o gráfico consegue mostar a tendência e o padrão de crescimento. Mas se alguém perguntar sobre o &lt;em&gt;Eucaluptus dunnii&lt;/em&gt;, capaz de demorarmos um tempo para encontrar a linha correspondente. Capaz ainda de não conseguirmos distinguir entre uma cor e outra. Essa é uma limitação do gráfico de linhas, quanto temos muitos fatores na legenda fica difícil a distinção entre eles. E quando se tem uma restrição de cor e o gráfico precisa estar em escala de cinza? Esquece! Há quem tente utilizar símbolos ou tipos de traços para distinguir os fatores, mas mesmo assim, não é uma tarefa fácil.&lt;/p&gt;
&lt;p&gt;É neste momento que podemos nos aproveitar do heatmap. Agora a intencidade de cor indica a variável resposta (Figura &lt;a href=&#34;#fig:6-heatmap-cont&#34;&gt;2&lt;/a&gt;). Veja que fica mais fácil acompanhar o crescimento de uma espécies em especial.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(dados, aes(factor(Idade), Esp, fill = Hdom)) +
  geom_tile() +
  labs(x = &amp;quot;Idade (anos)&amp;quot;, y = &amp;quot;Materiais genéticos&amp;quot;) +
  theme_few() +
  scale_fill_viridis(name = &amp;quot;Altura dominante (m)&amp;quot;, direction = -1) +
  guides(col = guide_legend(reverse = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:6-heatmap-cont&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2016-07-09-os-graficos-que-explicam-nossos-dados-heatmap_files/figure-html/6-heatmap-cont-1.png&#34; alt=&#34;Aumento da altura dominante utilizando heatmap com escala de cor contínua.&#34; width=&#34;4000&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figura  2: Aumento da altura dominante utilizando heatmap com escala de cor contínua.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Se for do interesse controlar a escala de cor em intervalos e classes, a alteração é simples (Figura &lt;a href=&#34;#fig:6-heatmap-discr&#34;&gt;3&lt;/a&gt;). Se reduzirmos as classes de cor, perdemos resolução na escala da variável resposta. Dependendo do objetivo do gráfico isso pode ser bom ou ruim. Neste caso, escolhi intervalos de 2 metros, pois achei mais adequado.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(dados, aes(factor(Idade),
       Esp, fill = cut(Hdom, breaks = seq(0, 40, 2)))) +
 geom_tile() +
 labs(x = &amp;quot;Idade (anos)&amp;quot;, y = &amp;quot;Materiais genéticos&amp;quot;) +
 theme_few() +
 scale_fill_viridis(
   name = &amp;quot;Altura dominante (m)&amp;quot;,
   discrete = T, direction = -1
 ) +
 guides(col = guide_legend(reverse = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:6-heatmap-discr&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2016-07-09-os-graficos-que-explicam-nossos-dados-heatmap_files/figure-html/6-heatmap-discr-1.png&#34; alt=&#34;Aumento da altura dominante utilizando heatmap com escala de cor discreta.&#34; width=&#34;4000&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figura  3: Aumento da altura dominante utilizando heatmap com escala de cor discreta.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Se quisermos deixar explícito o valor da variável resposta podemos indicá-la no gráfico, como na Figura &lt;a href=&#34;#fig:6-heatmap-discr-label&#34;&gt;4&lt;/a&gt;. Eu particularmente acho que fica muito poluído, mas em alguns casos pode ser interessante.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(dados, aes(factor(Idade),
       Esp, fill = cut(Hdom, breaks = seq(0, 40, 2)))) +
 geom_tile() +
 geom_text(aes(label = Hdom), color = &amp;quot;white&amp;quot;) +
 labs(x = &amp;quot;Idade (anos)&amp;quot;, y = &amp;quot;Materiais genéticos&amp;quot;) +
 theme_few() +
 scale_fill_viridis(
   name = &amp;quot;Altura dominante (m)&amp;quot;,
   discrete = T, direction = -1
 ) +
 guides(col = guide_legend(reverse = TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:6-heatmap-discr-label&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2016-07-09-os-graficos-que-explicam-nossos-dados-heatmap_files/figure-html/6-heatmap-discr-label-1.png&#34; alt=&#34;Aumento da altura dominante utilizando heatmap com escala de cor discreta e informação do valor no grid.&#34; width=&#34;4000&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figura  4: Aumento da altura dominante utilizando heatmap com escala de cor discreta e informação do valor no grid.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Note que o eixo x é uma variável temporal, entretanto o gráfico não dá a escala entre os anos. Um observador desatento pode achar que as medições ocorreram em intervalos regulares, mas isso não é verdade. Essa é uma desvantagem do heatmap. Quando as variáveis dos eixos são numéricas e representam uma escala comparativa, este atributo fica comprometido.&lt;/p&gt;
&lt;p&gt;Caso tenha alguma dúvida ou sugestão sobre o post, fique à vontade para fazer um comentário ou me contactar por Email.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::session_info()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  setting  value                       
##  version  R version 3.4.0 (2017-04-21)
##  system   x86_64, mingw32             
##  ui       RTerm                       
##  language (EN)                        
##  collate  Portuguese_Brazil.1252      
##  tz       America/Sao_Paulo           
##  date     2017-09-16                  
## 
##  package     * version    date       source                            
##  assertthat    0.2.0      2017-04-11 CRAN (R 3.4.0)                    
##  backports     1.1.0      2017-05-22 CRAN (R 3.4.0)                    
##  base        * 3.4.0      2017-04-21 local                             
##  bindr         0.1        2016-11-13 CRAN (R 3.4.0)                    
##  bindrcpp    * 0.2        2017-06-17 CRAN (R 3.4.0)                    
##  blogdown      0.1        2017-08-22 CRAN (R 3.4.1)                    
##  bookdown      0.5        2017-08-20 CRAN (R 3.4.1)                    
##  colorspace    1.3-2      2016-12-14 CRAN (R 3.4.0)                    
##  compiler      3.4.0      2017-04-21 local                             
##  curl          2.8.1      2017-07-21 CRAN (R 3.4.1)                    
##  datasets    * 3.4.0      2017-04-21 local                             
##  devtools      1.13.3     2017-08-02 CRAN (R 3.4.1)                    
##  digest        0.6.12     2017-01-27 CRAN (R 3.4.0)                    
##  dplyr       * 0.7.3      2017-09-09 CRAN (R 3.4.1)                    
##  evaluate      0.10.1     2017-06-24 CRAN (R 3.4.0)                    
##  ggplot2     * 2.2.1.9000 2017-08-08 Github (tidyverse/ggplot2@53a22cd)
##  ggthemes    * 3.4.0      2017-02-19 CRAN (R 3.4.0)                    
##  glue          1.1.1      2017-06-21 CRAN (R 3.4.0)                    
##  graphics    * 3.4.0      2017-04-21 local                             
##  grDevices   * 3.4.0      2017-04-21 local                             
##  grid          3.4.0      2017-04-21 local                             
##  gridExtra     2.3        2017-09-09 CRAN (R 3.4.1)                    
##  gtable        0.2.0      2016-02-26 CRAN (R 3.4.0)                    
##  highr         0.6        2016-05-09 CRAN (R 3.4.0)                    
##  hms           0.3        2016-11-22 CRAN (R 3.4.0)                    
##  htmltools     0.3.6      2017-04-28 CRAN (R 3.4.0)                    
##  knitr         1.17       2017-08-10 CRAN (R 3.4.1)                    
##  labeling      0.3        2014-08-23 CRAN (R 3.4.0)                    
##  lazyeval      0.2.0      2016-06-12 CRAN (R 3.4.0)                    
##  magrittr      1.5        2014-11-22 CRAN (R 3.4.0)                    
##  memoise       1.1.0      2017-04-21 CRAN (R 3.4.0)                    
##  methods     * 3.4.0      2017-04-21 local                             
##  munsell       0.4.3      2016-02-13 CRAN (R 3.4.0)                    
##  pacman      * 0.4.6      2017-05-14 CRAN (R 3.4.0)                    
##  pkgconfig     2.0.1      2017-03-21 CRAN (R 3.4.0)                    
##  plyr          1.8.4      2016-06-08 CRAN (R 3.4.0)                    
##  R6            2.2.2      2017-06-17 CRAN (R 3.4.0)                    
##  Rcpp          0.12.12    2017-07-15 CRAN (R 3.4.1)                    
##  readr       * 1.1.1      2017-05-16 CRAN (R 3.4.0)                    
##  rlang         0.1.2      2017-08-09 CRAN (R 3.4.1)                    
##  rmarkdown     1.6        2017-06-15 CRAN (R 3.4.0)                    
##  rprojroot     1.2        2017-01-16 CRAN (R 3.4.0)                    
##  scales        0.5.0      2017-08-24 CRAN (R 3.4.1)                    
##  stats       * 3.4.0      2017-04-21 local                             
##  stringi       1.1.5      2017-04-07 CRAN (R 3.4.0)                    
##  stringr       1.2.0      2017-02-18 CRAN (R 3.4.0)                    
##  tibble        1.3.4      2017-08-22 CRAN (R 3.4.1)                    
##  tools         3.4.0      2017-04-21 local                             
##  utils       * 3.4.0      2017-04-21 local                             
##  viridis     * 0.4.0      2017-03-27 CRAN (R 3.4.0)                    
##  viridisLite * 0.2.0      2017-03-24 CRAN (R 3.4.0)                    
##  withr         2.0.0      2017-08-08 Github (jimhester/withr@190d293)  
##  yaml          2.1.14     2016-11-12 CRAN (R 3.4.0)&lt;/code&gt;&lt;/pre&gt;
</description>
=======
      <description>O heatmap é um gráfico muito útil para identificar padrões, principalmente quando temos muitas variáveis no gráfico. Essencialmente o heatmap necessita de 3 variáveis: uma variável resposta e duas outras variáveis para compor os eixos x e y. Não há restrição quanto ao tipo de variável, qualquer uma delas podem ser quantitativa ou qualitativa. Talvez esse seja o trunfo do heatmap, essa flexbilidade quanto a natureza das variáveis nos permite utilizá-lo em diversos momentos e substituir gráficos mais tradicionais quando eles não dão conta do recado.</description>
>>>>>>> master
>>>>>>> Stashed changes
    </item>
    
  </channel>
</rss>