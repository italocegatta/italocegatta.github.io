<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Geofacet on Ítalo Cegatta</title>
    <link>/tags/geofacet/</link>
    <description>Recent content in Geofacet on Ítalo Cegatta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Sat, 24 Mar 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/tags/geofacet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Qual Estado tem mais pau-rodado?</title>
      <link>/qual-estado-tem-mais-pau-rodado/</link>
      <pubDate>Sat, 24 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/qual-estado-tem-mais-pau-rodado/</guid>
      <description>Em Cuiabá, cidade que nasci e cresci, pau-rodado é um substantivo que define pessoas que nasceram em outro Estado mas moram em Cuiabá e ali construíram suas vidas. Aliás, Cuiabá sempre foi conhecida por ser uma Cidade super acolhedora e talvez por isso todos encaram o dito pau-rodado de uma forma engraçada e sem qualquer sentido pejorativo.
Muito bem, meu interesse com este post é analisar o comportamento dos fluxos migratórios entre Estados e assim encontrar os Estados que tem mais e menos pau-rodado em sua população residente.</description>
      <content:encoded>
        


&lt;p&gt;Em Cuiabá, cidade que nasci e cresci, &lt;em&gt;pau-rodado&lt;/em&gt; é um substantivo que define pessoas que nasceram em outro Estado mas moram em Cuiabá e ali construíram suas vidas. Aliás, Cuiabá sempre foi conhecida por ser uma Cidade super acolhedora e talvez por isso todos encaram o dito &lt;em&gt;pau-rodado&lt;/em&gt; de uma forma engraçada e sem qualquer sentido pejorativo.&lt;/p&gt;
&lt;p&gt;Muito bem, meu interesse com este post é analisar o comportamento dos fluxos migratórios entre Estados e assim encontrar os Estados que tem mais e menos &lt;em&gt;pau-rodado&lt;/em&gt; em sua população residente. Serei breve e não vamos abordar todos os Estados, mas se você tiver curiosidade poderá aproveitar o código para uma análise mais ampla.&lt;/p&gt;
&lt;p&gt;A motivação partiu de uma matéria do &lt;a href=&#34;https://www.nexojornal.com.br/grafico/2017/12/01/Fluxos-migrat%C3%B3rios-a-distribui%C3%A7%C3%A3o-da-popula%C3%A7%C3%A3o-de-cada-estado-pelo-pa%C3%ADs&#34;&gt;Nexo Jornal&lt;/a&gt; sobre este tema, porém ao nível estadual. Depois de algumas horas tentando decifrar o site do IBGE, cheguei na &lt;a href=&#34;https://sidra.ibge.gov.br/tabela/1852&#34;&gt;página&lt;/a&gt; que informa a população residente, por lugar de nascimento e unidade da federação.&lt;/p&gt;
&lt;p&gt;Então vamos começar a análise carregando os pacotes do R necessários para este post.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)
pacman::p_load(readr, dplyr, tidyr, forcats, sf, geosphere, brmap, ggplot2, ggrepel, geofacet)
pacman::p_load_gh(&amp;quot;italocegatta/brmap&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Os dados originais estão disponíveis neste &lt;a href=&#34;https://sidra.ibge.gov.br/tabela/1852&#34;&gt;link&lt;/a&gt;, fiz apenas adequações porque o IBGE insiste em mesclar células nas tabelas disponibilizadas. Já nesta tabela você consegue olhar para o Estado que você mora e analisar quanto dos residentes nasceram em outros Estados. Mas o objetivo é enxergar isso de forma gráfica para ampliar a percepção dos dados.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;base &amp;lt;- read_csv2(&amp;quot;https://raw.githubusercontent.com/italocegatta/italocegatta.github.io_source/master/content/dados/pnad_2015_migracao.csv&amp;quot;)

base&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 27 x 28
##    Estado Rondônia  Acre Amazonas Roraima  Pará Amapá Tocantins Maranhão
##    &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 Rondô~    57.4   1.84     1.9     0.08  0.7  NA        0.02      1.02
##  2 Acre       1.54 87.9      3.89    0.02  0.17 NA        0.02      0.11
##  3 Amazo~     0.46  1.6     87.6     0.23  5.36  0.13     0.06      0.87
##  4 Rorai~     0.65  0.24     5.16   55.6   6.54  0.04     0.570    19.0 
##  5 Pará       0.03  0.02     0.49    0.02 84.6   0.19     1.07      6.89
##  6 Amapá      0.1   0.03     0.2     0.17 20.8  72.7      0.1       3.65
##  7 Tocan~     0.07  0.07     0.02   NA     2.83  0.02    69.5       8.58
##  8 Maran~     0.03  0.01     0.05   NA     1.11  0.01     0.32     92.4 
##  9 Piauí      0.04  0.02     0.04    0.05  0.28 NA        0.11      3.97
## 10 Ceará      0.03  0.04     0.11   NA     0.22  0.01     0.03      0.35
## # ... with 17 more rows, and 19 more variables: Piauí &amp;lt;dbl&amp;gt;, Ceará &amp;lt;dbl&amp;gt;,
## #   `Rio Grande do Norte` &amp;lt;dbl&amp;gt;, Paraíba &amp;lt;dbl&amp;gt;, Pernambuco &amp;lt;dbl&amp;gt;,
## #   Alagoas &amp;lt;dbl&amp;gt;, Sergipe &amp;lt;dbl&amp;gt;, Bahia &amp;lt;dbl&amp;gt;, `Minas Gerais` &amp;lt;dbl&amp;gt;,
## #   `Espírito Santo` &amp;lt;dbl&amp;gt;, `Rio de Janeiro` &amp;lt;dbl&amp;gt;, `São Paulo` &amp;lt;dbl&amp;gt;,
## #   Paraná &amp;lt;dbl&amp;gt;, `Santa Catarina` &amp;lt;dbl&amp;gt;, `Rio Grande do Sul` &amp;lt;dbl&amp;gt;, `Mato
## #   Grosso do Sul` &amp;lt;dbl&amp;gt;, `Mato Grosso` &amp;lt;dbl&amp;gt;, Goiás &amp;lt;dbl&amp;gt;, `Distrito
## #   Federal` &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dados longitudinais como estes ajudam humanos a enxergar os valores de forma mais fácil, mas do ponto de vista de processamento de dados, não dá pra fazer muita coisa com os dados assim. Vamos organizá-los seguindo a filosofia do &lt;a href=&#34;https://italocegatta.github.io/o-conceito-tidy-data&#34;&gt;Tidy data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A nova tabela nos informa a porcentagem da população residente (coluna ‘valor’) para cada Estado, subdividindo os valores por local de nascimento. E agora vai a primeira simplificação: foram selecionados apenas os 6 Estados de nascimento mais representativos para cada Estado de residência.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- base %&amp;gt;% 
  gather(reside, valor, -Estado) %&amp;gt;%
  select(nasce = Estado, reside, valor) %&amp;gt;% 
  replace_na(list(valor = 0)) %&amp;gt;% 
  group_by(nasce) %&amp;gt;% 
  filter(row_number(-valor) &amp;lt;= 6) %&amp;gt;% 
  ungroup()

df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 162 x 3
##    nasce    reside   valor
##    &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 Rondônia Rondônia 57.4 
##  2 Acre     Rondônia  1.54
##  3 Amazonas Rondônia  0.46
##  4 Acre     Acre     87.9 
##  5 Amazonas Acre      1.6 
##  6 Acre     Amazonas  3.89
##  7 Amazonas Amazonas 87.6 
##  8 Roraima  Amazonas  5.16
##  9 Roraima  Roraima  55.6 
## 10 Amazonas Pará      5.36
## # ... with 152 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vamos nos preparar para a segunda simplificação: selecionar os extremos em termos de população que nasceu e reside no mesmo Estado. Então, RS, CE e PE são os Estados que mais tem moradores nascidos dentro do próprio Estado, enquanto RO, RR e DF tem uma parcela maior de residentes nascidos em outros Estados.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;estados_interesse &amp;lt;- df %&amp;gt;%
  filter(reside == nasce) %&amp;gt;%
  filter(row_number(-valor) &amp;lt;= 3 | row_number(valor) &amp;lt;= 3) %&amp;gt;% 
  arrange(-valor) %&amp;gt;%
  pull(nasce)

estados_interesse&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Rio Grande do Sul&amp;quot; &amp;quot;Ceará&amp;quot;             &amp;quot;Pernambuco&amp;quot;       
## [4] &amp;quot;Rondônia&amp;quot;          &amp;quot;Roraima&amp;quot;           &amp;quot;Distrito Federal&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Preparando para o mapa, vamos pegar as coordenadas dos centroides de cada Estado.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;estado_cent &amp;lt;- brmap_estado %&amp;gt;% 
  st_centroid() %&amp;gt;% 
  cbind(., st_coordinates(.)) %&amp;gt;% 
  st_set_geometry(NULL) %&amp;gt;% 
  select(estado = estado_nome, lon = X, lat = Y)

estado_cent&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                 estado       lon        lat
## 1             Rondônia -62.84197 -10.913218
## 2                 Acre -70.47328  -9.212886
## 3             Amazonas -64.65314  -4.154177
## 4              Roraima -61.39928   2.084226
## 5                 Pará -53.06424  -3.974791
## 6                Amapá -51.95592   1.443319
## 7            Tocantins -48.32923 -10.150316
## 8             Maranhão -45.27922  -5.061285
## 9                Piauí -42.96862  -7.387530
## 10               Ceará -39.61569  -5.093345
## 11 Rio Grande do Norte -36.67348  -5.839677
## 12             Paraíba -36.83262  -7.121055
## 13          Pernambuco -37.99843  -8.326066
## 14             Alagoas -36.62494  -9.513863
## 15             Sergipe -37.44390 -10.584475
## 16               Bahia -41.72094 -12.475023
## 17        Minas Gerais -44.67343 -18.456187
## 18      Espírito Santo -40.67106 -19.575176
## 19      Rio de Janeiro -42.65238 -22.188741
## 20           São Paulo -48.73391 -22.263472
## 21              Paraná -51.61668 -24.635899
## 22      Santa Catarina -50.47480 -27.247356
## 23   Rio Grande do Sul -53.32029 -29.705681
## 24  Mato Grosso do Sul -54.84563 -20.327310
## 25         Mato Grosso -55.91215 -12.948967
## 26               Goiás -49.62361 -16.042227
## 27    Distrito Federal -47.79736 -15.780692&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E agora, o pulo do gato. Vamos criar as linhas que ligam os Estados entre si e em seguida adicionar à tabela que informa as relações de fluxo. Portanto, para cada relação entre Estado de nascimento/residência temos uma feição de linha e o valor que representa a porcentagem de residentes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coord &amp;lt;- df %&amp;gt;% 
  left_join(estado_cent, by = c(&amp;quot;nasce&amp;quot; = &amp;quot;estado&amp;quot;)) %&amp;gt;% 
  left_join(estado_cent, by = c(&amp;quot;reside&amp;quot; = &amp;quot;estado&amp;quot;)) %&amp;gt;%
  filter(nasce %in% estados_interesse)

linhas &amp;lt;- gcIntermediate(
  select(coord, lon.x, lat.x), 
  select(coord, lon.y, lat.y), 
  sp = TRUE, addStartEnd = TRUE
  ) %&amp;gt;% 
  st_as_sf()

fluxo_linha &amp;lt;- coord %&amp;gt;% 
  select(nasce, reside, valor) %&amp;gt;% 
  bind_cols(linhas) %&amp;gt;% 
  left_join(estado_cent, by = c(&amp;quot;reside&amp;quot; = &amp;quot;estado&amp;quot;)) %&amp;gt;% 
  mutate(nasce = fct_relevel(nasce, estados_interesse)) %&amp;gt;% 
  st_as_sf()

fluxo_linha&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Simple feature collection with 36 features and 5 fields
## geometry type:  LINESTRING
## dimension:      XY
## bbox:           xmin: -64.65314 ymin: -29.70568 xmax: -36.62494 ymax: 2.084226
## epsg (SRID):    4326
## proj4string:    +proj=longlat +ellps=WGS84 +no_defs
## # A tibble: 36 x 6
##    nasce    reside  valor   lon    lat                             geometry
##    &amp;lt;fct&amp;gt;    &amp;lt;chr&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;                    &amp;lt;LINESTRING [Â°]&amp;gt;
##  1 Rondônia Rondôn~ 57.4  -62.8 -10.9  (-62.84197 -10.91322, -62.84197 -10~
##  2 Roraima  Amazon~  5.16 -64.7  -4.15 (-61.39928 2.084226, -61.46308 1.96~
##  3 Roraima  Roraima 55.6  -61.4   2.08 (-61.39928 2.084226, -61.39928 2.08~
##  4 Roraima  Pará     6.54 -53.1  -3.97 (-61.39928 2.084226, -61.23584 1.96~
##  5 Roraima  Maranh~ 19.0  -45.3  -5.06 (-61.39928 2.084226, -61.08344 1.94~
##  6 Distrit~ Maranh~  4.42 -45.3  -5.06 (-47.79736 -15.78069, -47.74601 -15~
##  7 Ceará    Piauí    0.39 -43.0  -7.39 (-39.61569 -5.093345, -39.68117 -5.~
##  8 Distrit~ Piauí    5.08 -43.0  -7.39 (-47.79736 -15.78069, -47.69952 -15~
##  9 Roraima  Ceará    2.76 -39.6  -5.09 (-61.39928 2.084226, -60.97249 1.94~
## 10 Ceará    Ceará   95.8  -39.6  -5.09 (-39.61569 -5.093345, -39.61569 -5.~
## # ... with 26 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para deixar o gráfico um pouco mais bonito, vamos dar cor ao valor que estamos estudando. Mas agora a feição será o polígono que representa o Estado de residentes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fluxo_poligono &amp;lt;- brmap_estado %&amp;gt;% 
  left_join(df, by =  c(&amp;quot;estado_nome&amp;quot; = &amp;quot;reside&amp;quot;)) %&amp;gt;% 
  rename(reside = estado_nome) %&amp;gt;% 
  filter(nasce %in% estados_interesse) %&amp;gt;% 
  mutate(nasce = fct_relevel(nasce, estados_interesse)) %&amp;gt;% 
  select(nasce, reside, valor)

fluxo_poligono&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Simple feature collection with 36 features and 3 fields
## geometry type:  POLYGON
## dimension:      XY
## bbox:           xmin: -73.80156 ymin: -33.75118 xmax: -34.79288 ymax: 5.271841
## epsg (SRID):    4674
## proj4string:    +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs
## # A tibble: 36 x 4
##    nasce       reside  valor                                       geometry
##    &amp;lt;fct&amp;gt;       &amp;lt;chr&amp;gt;   &amp;lt;dbl&amp;gt;                                 &amp;lt;POLYGON [Â°]&amp;gt;
##  1 Rondônia    Rondôn~ 57.4  ((-62.86662 -7.975868, -62.86017 -7.982323, -~
##  2 Roraima     Amazon~  5.16 ((-67.32609 2.029714, -67.31682 2.00125, -67.~
##  3 Roraima     Roraima 55.6  ((-60.20051 5.264343, -60.19828 5.260453, -60~
##  4 Roraima     Pará     6.54 ((-54.95431 2.583692, -54.93542 2.518585, -54~
##  5 Roraima     Maranh~ 19.0  ((-45.84073 -1.045485, -45.84099 -1.046971, -~
##  6 Distrito F~ Maranh~  4.42 ((-45.84073 -1.045485, -45.84099 -1.046971, -~
##  7 Ceará       Piauí    0.39 ((-41.74605 -2.803497, -41.74241 -2.805697, -~
##  8 Distrito F~ Piauí    5.08 ((-41.74605 -2.803497, -41.74241 -2.805697, -~
##  9 Roraima     Ceará    2.76 ((-40.49717 -2.784509, -40.49173 -2.788106, -~
## 10 Ceará       Ceará   95.8  ((-40.49717 -2.784509, -40.49173 -2.788106, -~
## # ... with 26 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pronto, já temos todos os dados que fazer o gráfico de interesse. Lembrando que optamos por dar destaque a 6 Estados e para cada um deles, os 6 Estados de nascimento que mais representam a população de residentes. Sim, é um tanto complexo. Eu fiquei algumas horas para poder criar o código e entender o que estava processando.&lt;/p&gt;
&lt;p&gt;Como exemplo vamos interpretar as informações de Roraima: do total de residentes, 55.6% nasceram no próprio Estado de Roraima; 5.2%, 6.5% e 19% nasceram no Amazonas, Pará e Maranhão, respectivamente.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_sf(data = brmap_estado, color = &amp;quot;white&amp;quot;, fill = &amp;quot;grey80&amp;quot;, size = 0.3) +
  geom_sf(data = fluxo_poligono, aes(fill = valor), color = &amp;quot;white&amp;quot;, size = 0.3) +
  geom_sf(data = fluxo_linha, color = &amp;quot;cyan&amp;quot;, size = 0.3) +
  geom_label_repel(
    data = fluxo_linha,
    aes(lon, lat, label = round(valor, 1)),
    size = 3, segment.colour = NA
  ) +
  facet_wrap(~nasce) +
  labs(
    title = &amp;quot;População residente (% do total geral)&amp;quot;,
    subtitle = &amp;quot;PNAD/IBGE, 2015&amp;quot;,
    x = NULL, y = NULL
  ) +
  scale_fill_viridis_c(guide = FALSE) +
  coord_sf(datum = NA) +
  theme_void(16)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-03-24-qual-estado-tem-mais-pau-rodado_files/figure-html/unnamed-chunk-9-1.svg&#34; width=&#34;960&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Pontos interessantes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rondônia e Roraima retém uma proporção parecida da população dentro do próprio Estado, entretanto o pessoal que mora em Rondônia veio do Sul e Sudeste; ao passo que os moradores de Roraima vêm do AM, PA e MA.&lt;/li&gt;
&lt;li&gt;O Distrito Federal não me surpreendeu, grande parte de pessoas nasceram em GO, MG e BA.&lt;/li&gt;
&lt;li&gt;Um número expressivo de pessoas que nasceram em São Paulo e hoje moram no CE e PE… parece que o jogo virou, não é mesmo?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Caso tenha alguma dúvida ou sugestão sobre o post, fique à vontade para fazer um comentário ou me contatar por E-mail.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessioninfo::session_info(c(&amp;quot;readr&amp;quot;, &amp;quot;dplyr&amp;quot;, &amp;quot;ggplot2&amp;quot;, &amp;quot;tidyr&amp;quot;, &amp;quot;forcats&amp;quot;, &amp;quot;sf&amp;quot;, &amp;quot;geosphere&amp;quot;, &amp;quot;ggrepel&amp;quot;, &amp;quot;geofacet&amp;quot;, &amp;quot;brmap&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## - Session info ----------------------------------------------------------
##  setting  value                       
##  version  R version 3.5.1 (2018-07-02)
##  os       Windows 10 x64              
##  system   x86_64, mingw32             
##  ui       RTerm                       
##  language (EN)                        
##  collate  Portuguese_Brazil.1252      
##  ctype    Portuguese_Brazil.1252      
##  tz       America/Sao_Paulo           
##  date     2018-12-31                  
## 
## - Packages --------------------------------------------------------------
##  package       * version     date       lib
##  assertthat      0.2.0       2017-04-11 [1]
##  BH              1.66.0-1    2018-02-13 [1]
##  bindr           0.1.1       2018-03-13 [1]
##  bindrcpp      * 0.2.2       2018-03-29 [1]
##  brmap         * 0.0.5       2018-09-16 [1]
##  class           7.3-14      2015-08-30 [2]
##  classInt        0.3-1       2018-12-18 [1]
##  cli             1.0.1       2018-09-25 [1]
##  clipr           0.4.1       2018-06-23 [1]
##  colorspace      1.3-2       2016-12-14 [1]
##  crayon          1.3.4       2017-09-16 [1]
##  curl            3.2         2018-03-28 [1]
##  DBI             1.0.0       2018-05-02 [1]
##  digest          0.6.18      2018-10-10 [1]
##  dplyr         * 0.7.8       2018-11-10 [1]
##  e1071           1.7-0       2018-07-28 [1]
##  fansi           0.4.0       2018-10-05 [1]
##  forcats       * 0.3.0       2018-02-19 [1]
##  geofacet      * 0.1.9       2018-03-29 [1]
##  geogrid         0.1.1       2018-12-11 [1]
##  geosphere     * 1.5-7       2017-11-05 [1]
##  ggplot2       * 3.1.0       2018-10-25 [1]
##  ggrepel       * 0.8.0       2018-05-09 [1]
##  glue            1.3.0       2018-07-17 [1]
##  gridExtra       2.3         2017-09-09 [1]
##  gtable          0.2.0       2016-02-26 [1]
##  hms             0.4.2       2018-03-10 [1]
##  httr            1.4.0       2018-12-11 [1]
##  imguR           1.0.3       2016-03-29 [1]
##  jpeg            0.1-8       2014-01-23 [1]
##  jsonlite        1.6         2018-12-07 [1]
##  labeling        0.3         2014-08-23 [1]
##  lattice         0.20-35     2017-03-25 [2]
##  lazyeval        0.2.1       2017-10-29 [1]
##  magrittr        1.5         2014-11-22 [1]
##  MASS            7.3-50      2018-04-30 [2]
##  Matrix          1.2-14      2018-04-13 [2]
##  mgcv            1.8-24      2018-06-23 [2]
##  mime            0.6         2018-10-05 [1]
##  munsell         0.5.0       2018-06-12 [1]
##  nlme            3.1-137     2018-04-07 [2]
##  openssl         1.1         2018-11-15 [1]
##  pillar          1.3.1       2018-12-15 [1]
##  pkgconfig       2.0.2       2018-08-16 [1]
##  plogr           0.2.0       2018-03-25 [1]
##  plyr            1.8.4       2016-06-08 [1]
##  png             0.1-7       2013-12-03 [1]
##  purrr           0.2.5       2018-05-29 [1]
##  R6              2.3.0       2018-10-04 [1]
##  RColorBrewer    1.1-2       2014-12-07 [1]
##  Rcpp            1.0.0       2018-11-07 [1]
##  RcppArmadillo   0.9.200.5.0 2018-11-28 [1]
##  readr         * 1.3.1       2018-12-21 [1]
##  reshape2        1.4.3       2017-12-11 [1]
##  rgeos           0.4-2       2018-11-08 [1]
##  rlang           0.3.0.1     2018-10-25 [1]
##  rnaturalearth   0.1.0       2017-03-21 [1]
##  scales          1.0.0       2018-08-09 [1]
##  sf            * 0.7-2       2018-12-20 [1]
##  sp              1.3-1       2018-06-05 [1]
##  stringi         1.2.4       2018-07-20 [1]
##  stringr         1.3.1       2018-05-10 [1]
##  tibble          1.4.2       2018-01-22 [1]
##  tidyr         * 0.8.2       2018-10-28 [1]
##  tidyselect      0.2.5       2018-10-11 [1]
##  units           0.6-2       2018-12-05 [1]
##  utf8            1.1.4       2018-05-24 [1]
##  viridisLite     0.3.0       2018-02-01 [1]
##  withr           2.1.2       2018-03-15 [1]
##  source                             
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.0)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  Github (italocegatta/brmap@181fc73)
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.2)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.2)                     
##  CRAN (R 3.5.2)                     
##  CRAN (R 3.5.2)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.2)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.0)                     
##  CRAN (R 3.5.2)                     
##  CRAN (R 3.5.0)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.2)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.0)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.0)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.2)                     
##  CRAN (R 3.5.2)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.2)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.2)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
##  CRAN (R 3.5.1)                     
## 
## [1] C:/Users/Italo/Documents/R/win-library/3.5
## [2] C:/Program Files/R/R-3.5.1/library&lt;/code&gt;&lt;/pre&gt;

      </content:encoded>
    </item>
    
    <item>
      <title>Gráficos com dimensão espacial e temporal</title>
      <link>/graficos-com-dimensao-espacial-e-temporal/</link>
      <pubDate>Sat, 08 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/graficos-com-dimensao-espacial-e-temporal/</guid>
      <description>O post de hoje é sobre visualização de dados com dimensão espacial e temporal. Basicamente são gráficos que têm uma representação geográfica associada a informações que variam no tempo. Este tipo de análise é comum no meu dia a dia e por isso resolvi deixar 3 alternativas registradas aqui. O contexto que iremos abordar está relacionado ao banco de dados de focos de incêndios registrados pelo INPE no Programa Queimadas Monitoramento por Satélites.</description>
      <content:encoded>
        


&lt;p&gt;O post de hoje é sobre visualização de dados com dimensão espacial e temporal. Basicamente são gráficos que têm uma representação geográfica associada a informações que variam no tempo. Este tipo de análise é comum no meu dia a dia e por isso resolvi deixar 3 alternativas registradas aqui. O contexto que iremos abordar está relacionado ao banco de dados de focos de incêndios registrados pelo INPE no &lt;a href=&#34;http://www.inpe.br/queimadas/situacao-atual&#34;&gt;Programa Queimadas Monitoramento por Satélites&lt;/a&gt;. O site é bem interessante e apresenta algumas estatísticas úteis sobre as queimadas na América do Sul e Brasil. Iremos trabalhar com a tabela que resume os focos de incêndios por ano e Estado brasileiro.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)
pacman::p_load(readr, dplyr, sf, ggplot2, ggthemes, geofacet, scales)
pacman::p_load_gh(&amp;quot;italocegatta/brmap&amp;quot;)
pacman::p_load_gh(&amp;quot;thomasp85/gganimate&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O primeiro passo foi copiar os dados da página e organizá-los no formato &lt;a href=&#34;https://italocegatta.github.io/o-conceito-tidy-data/&#34;&gt;tidy&lt;/a&gt;. Poderíamos fazer uma análise exploratória dos dados, mas quero manter o foco em algo bem pontual: como mostrar os dados brutos de uma só vez? Ou seja, considerando a dimensão de tempo (ano), geografia (localização do estado) e variável resposta (focos) na mesma janela gráfica, de que forma poderíamos apresentar os dados?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;focos &amp;lt;- read_csv2(&amp;quot;https://raw.githubusercontent.com/italocegatta/italocegatta.github.io_source/master/content/dados/base_incendios.csv&amp;quot;)

focos&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 162 x 3
##    sigla   ano focos
##    &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 AC     2011    13
##  2 AL     2011   127
##  3 AM     2011   159
##  4 AP     2011     5
##  5 BA     2011   883
##  6 CE     2011    44
##  7 DF     2011     8
##  8 ES     2011    55
##  9 GO     2011   492
## 10 MA     2011   656
## # ... with 152 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vamos agora adicionar a referência espacial aos dados utilizando os polígonos do pacote &lt;a href=&#34;https://github.com/italocegatta/brmap&#34;&gt;brmap&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;estados_focos &amp;lt;-  focos %&amp;gt;% 
  left_join(brmap_estado, by = c(&amp;quot;sigla&amp;quot; = &amp;quot;estado_sigla&amp;quot;))

estados_focos&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 162 x 7
##    sigla   ano focos cod_regiao cod_estado estado_nome
##    &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;      &amp;lt;int&amp;gt;      &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;      
##  1 AC     2011    13          1         12 Acre       
##  2 AL     2011   127          2         27 Alagoas    
##  3 AM     2011   159          1         13 Amazonas   
##  4 AP     2011     5          1         16 Amapá      
##  5 BA     2011   883          2         29 Bahia      
##  6 CE     2011    44          2         23 Ceará      
##  7 DF     2011     8          5         53 Distrito F~
##  8 ES     2011    55          3         32 Espírito S~
##  9 GO     2011   492          5         52 Goiás      
## 10 MA     2011   656          2         21 Maranhão   
## # ... with 152 more rows, and 1 more variable: geometry &amp;lt;POLYGON [Â°]&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A primeira abordagem vai utilizar o pacote &lt;a href=&#34;https://github.com/hafen/geofacet&#34;&gt;geofacet&lt;/a&gt;. Ele permite criarmos um grid de referência para orientar a função &lt;code&gt;facet_wrap&lt;/code&gt; de &lt;code&gt;ggplot2&lt;/code&gt;. O pacote já vem carregado com um grid do Brasil, o &lt;code&gt;br_grid1&lt;/code&gt;, mas você pode construir e utilizar seu próprio grid. Eu, particularmente, gosto desta representação pois é extremamente flexível e comporta uma infinidade de gráficos (linhas, pontos, barras…) e dimensões (color, shape, size…). O gráfico &lt;a href=&#34;#fig:focos-geofacet&#34;&gt;1&lt;/a&gt; está bem simples mas cumpre seu papel em facilitar a percepção da variação anual e dar uma noção da região espacial do Estado no Brasil.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(estados_focos, aes(ano, focos)) +
  geom_line() +
  facet_geo(~estado_nome, grid = br_states_grid1) +
  labs(
    x = &amp;quot;Ano&amp;quot;,
    y = &amp;quot;Nº de focos de incêndios&amp;quot;
  ) +
  scale_x_continuous(breaks = 2011:2017, labels = 11:17) +
  scale_y_continuous(label = unit_format(unit = &amp;quot;k&amp;quot;, scale = 1e-3)) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:focos-geofacet&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2017-07-08-graficos-com-dimensao-espacial-e-temporal_files/figure-html/focos-geofacet-1.svg&#34; alt=&#34;Representação em painel orientado utilizando linhas.&#34; width=&#34;960&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figura  1: Representação em painel orientado utilizando linhas.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;A segunda abordagem é relativamente simples e intuitiva. Construiremos um mapa temático utilizando o Nº de focos como escala de cor, mas organizado em um painel que tem como base o ano de registro. O gráfico &lt;a href=&#34;#fig:focos-facet&#34;&gt;2&lt;/a&gt; apela para a dimensão de cor e instantaneamente nos informa o estado mais crítico. Especificamente para esta análise ele este tipo de gráfico é muito apropriado.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(estados_focos) +
  geom_sf(aes(fill = focos), color = NA) +
  facet_wrap(~ano) +
  labs(fill = &amp;quot;Nº de focos de incêndios&amp;quot;) +
  scale_fill_viridis_c(label = unit_format(unit = &amp;quot;k&amp;quot;, scale = 1e-3)) +
  coord_sf(datum = NA) +
  theme_bw(16) +
  theme(legend.position = &amp;quot;bottom&amp;quot;, legend.justification = &amp;quot;right&amp;quot;) +
  guides(fill = guide_colorbar(barwidth = 15, title.position = &amp;quot;top&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:focos-facet&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2017-07-08-graficos-com-dimensao-espacial-e-temporal_files/figure-html/focos-facet-1.svg&#34; alt=&#34;Representação em painel utilizando cores.&#34; width=&#34;960&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figura  2: Representação em painel utilizando cores.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;E por fim, nossa terceira tentativa vai unificar os painéis do gráfico &lt;a href=&#34;#fig:focos-facet&#34;&gt;2&lt;/a&gt; em um gif animado. A limitação do gráfico é que muitas vezes nossos gráficos vão para documentos estáticos como PDF e Word, inviabilizando o gif.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(estados_focos) +
  geom_sf(aes(fill = focos), color = NA) +
  labs(
    title = &amp;quot;Ano: {current_frame}&amp;quot;,
    fill = &amp;quot;Nº de focos de incêndios&amp;quot;
  ) +
  scale_fill_viridis_c(label = unit_format(unit = &amp;quot;k&amp;quot;, scale = 1e-3)) +
  theme_bw(18) +
  theme(legend.position = &amp;quot;bottom&amp;quot;, legend.justification = &amp;quot;right&amp;quot;) +
  guides(fill = guide_colorbar(barwidth = 15, title.position = &amp;quot;top&amp;quot;)) +
  transition_manual(ano)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;http://imgur.com/KoLpSsF&#34;&gt;&lt;img src=&#34;http://i.imgur.com/KoLpSsF.gif&#34; style=&#34;width:100%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Caso tenha alguma dúvida ou sugestão sobre o post, fique à vontade para fazer um comentário ou me contatar por E-mail.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessioninfo::session_info(c(&amp;quot;readr&amp;quot;, &amp;quot;dplyr&amp;quot;, &amp;quot;ggplot2&amp;quot;, &amp;quot;sf&amp;quot;, &amp;quot;geofacet&amp;quot;, &amp;quot;gganimate&amp;quot;, &amp;quot;scales&amp;quot;, &amp;quot;brmap&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## - Session info ----------------------------------------------------------
##  setting  value                       
##  version  R version 3.5.1 (2018-07-02)
##  os       Windows 10 x64              
##  system   x86_64, mingw32             
##  ui       RTerm                       
##  language (EN)                        
##  collate  Portuguese_Brazil.1252      
##  ctype    Portuguese_Brazil.1252      
##  tz       America/Sao_Paulo           
##  date     2018-12-31                  
## 
## - Packages --------------------------------------------------------------
##  package       * version     date       lib
##  assertthat      0.2.0       2017-04-11 [1]
##  BH              1.66.0-1    2018-02-13 [1]
##  bindr           0.1.1       2018-03-13 [1]
##  bindrcpp        0.2.2       2018-03-29 [1]
##  brmap         * 0.0.5       2018-09-16 [1]
##  class           7.3-14      2015-08-30 [2]
##  classInt        0.3-1       2018-12-18 [1]
##  cli             1.0.1       2018-09-25 [1]
##  clipr           0.4.1       2018-06-23 [1]
##  colorspace      1.3-2       2016-12-14 [1]
##  crayon          1.3.4       2017-09-16 [1]
##  curl            3.2         2018-03-28 [1]
##  DBI             1.0.0       2018-05-02 [1]
##  digest          0.6.18      2018-10-10 [1]
##  dplyr         * 0.7.8       2018-11-10 [1]
##  e1071           1.7-0       2018-07-28 [1]
##  fansi           0.4.0       2018-10-05 [1]
##  farver          1.1.0       2018-11-20 [1]
##  geofacet      * 0.1.9       2018-03-29 [1]
##  geogrid         0.1.1       2018-12-11 [1]
##  gganimate     * 0.9.9.9999  2018-12-31 [1]
##  ggplot2       * 3.1.0       2018-10-25 [1]
##  ggrepel         0.8.0       2018-05-09 [1]
##  glue            1.3.0       2018-07-17 [1]
##  gridExtra       2.3         2017-09-09 [1]
##  gtable          0.2.0       2016-02-26 [1]
##  hms             0.4.2       2018-03-10 [1]
##  httr            1.4.0       2018-12-11 [1]
##  imguR           1.0.3       2016-03-29 [1]
##  jpeg            0.1-8       2014-01-23 [1]
##  jsonlite        1.6         2018-12-07 [1]
##  labeling        0.3         2014-08-23 [1]
##  lattice         0.20-35     2017-03-25 [2]
##  lazyeval        0.2.1       2017-10-29 [1]
##  magrittr        1.5         2014-11-22 [1]
##  MASS            7.3-50      2018-04-30 [2]
##  Matrix          1.2-14      2018-04-13 [2]
##  mgcv            1.8-24      2018-06-23 [2]
##  mime            0.6         2018-10-05 [1]
##  munsell         0.5.0       2018-06-12 [1]
##  nlme            3.1-137     2018-04-07 [2]
##  openssl         1.1         2018-11-15 [1]
##  pillar          1.3.1       2018-12-15 [1]
##  pkgconfig       2.0.2       2018-08-16 [1]
##  plogr           0.2.0       2018-03-25 [1]
##  plyr            1.8.4       2016-06-08 [1]
##  png             0.1-7       2013-12-03 [1]
##  prettyunits     1.0.2       2015-07-13 [1]
##  progress        1.2.0       2018-06-14 [1]
##  purrr           0.2.5       2018-05-29 [1]
##  R6              2.3.0       2018-10-04 [1]
##  RColorBrewer    1.1-2       2014-12-07 [1]
##  Rcpp            1.0.0       2018-11-07 [1]
##  RcppArmadillo   0.9.200.5.0 2018-11-28 [1]
##  readr         * 1.3.1       2018-12-21 [1]
##  reshape2        1.4.3       2017-12-11 [1]
##  rgeos           0.4-2       2018-11-08 [1]
##  rlang           0.3.0.1     2018-10-25 [1]
##  rnaturalearth   0.1.0       2017-03-21 [1]
##  scales        * 1.0.0       2018-08-09 [1]
##  sf            * 0.7-2       2018-12-20 [1]
##  sp              1.3-1       2018-06-05 [1]
##  stringi         1.2.4       2018-07-20 [1]
##  stringr         1.3.1       2018-05-10 [1]
##  tibble          1.4.2       2018-01-22 [1]
##  tidyselect      0.2.5       2018-10-11 [1]
##  tweenr          1.0.1       2018-12-14 [1]
##  units           0.6-2       2018-12-05 [1]
##  utf8            1.1.4       2018-05-24 [1]
##  viridisLite     0.3.0       2018-02-01 [1]
##  withr           2.1.2       2018-03-15 [1]
##  source                              
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.0)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  Github (italocegatta/brmap@181fc73) 
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.2)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.2)                      
##  CRAN (R 3.5.2)                      
##  Github (thomasp85/gganimate@299fd58)
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.2)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.0)                      
##  CRAN (R 3.5.2)                      
##  CRAN (R 3.5.0)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.2)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.0)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.0)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.2)                      
##  CRAN (R 3.5.2)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.2)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.2)                      
##  CRAN (R 3.5.2)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
##  CRAN (R 3.5.1)                      
## 
## [1] C:/Users/Italo/Documents/R/win-library/3.5
## [2] C:/Program Files/R/R-3.5.1/library&lt;/code&gt;&lt;/pre&gt;

      </content:encoded>
    </item>
    
  </channel>
</rss>
